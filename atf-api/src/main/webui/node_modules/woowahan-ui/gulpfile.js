var gulp   = require('gulp'),
    sass   = require('gulp-sass'),
    rename = require('gulp-rename'),
    hbs    = require('gulp-compile-handlebars');

var config = {
  bootstrapDir: './node_modules/bootstrap-sass',
  fontsDir: './node_modules/font-awesome',
  notoDir: './node_modules/noto-sans-kr',
  publicDir: './dist'
};

gulp.task('watch', function() {
  gulp.watch(['scss/**/*.scss', 'scss/**/*.sass', 'view/**/*.hbs'], ['default'])
});

gulp.task('css', function() {
  gulp.src("scss/bootstrap.scss")
  .pipe(sass({outputStyle:'compressed'}))
	.pipe(rename('bootstrap.min.css'))
  .pipe(gulp.dest(config.publicDir + '/css'));
});

gulp.task('fonts', function() {
  gulp.src(config.bootstrapDir + '/assets/fonts/**/*').pipe(gulp.dest(config.publicDir + '/fonts'));
  gulp.src(config.fontsDir + '/fonts/**/*').pipe(gulp.dest(config.publicDir + '/fonts'));
  gulp.src(config.notoDir + '/fonts/**/*').pipe(gulp.dest(config.publicDir + '/css/fonts'));
});

gulp.task('js', function() {
  gulp.src(config.bootstrapDir + '/assets/javascripts/bootstrap.min.js')
  .pipe(gulp.dest(config.publicDir + '/js'))
});

gulp.task('view', function() {
    var options = {
      batch : ['view/module']
    };

    return gulp.src('view/main.hbs')
      .pipe(hbs('', options))
      .pipe(rename('main.html'))
      .pipe(gulp.dest('html'));
});

gulp.task('default', ['css', 'js', 'fonts', 'view']);
